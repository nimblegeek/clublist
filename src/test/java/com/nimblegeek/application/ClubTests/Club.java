package com.nimblegeek.application.ClubTests;


// Generated by CodiumAI

import org.junit.Test;
import static org.junit.Assert.*;

public class ClubTest {


    // Creating a Club object with a name and website
    @Test
    public void test_createClubWithNameAndWebsite() {
        Club club = new Club("Club Name", "www.clubwebsite.com");
        assertEquals("Club Name", club.getName());
        assertEquals("www.clubwebsite.com", club.getWebsite());
    }

    // Retrieving the name and website of a Club object
    @Test
    public void test_retrieveNameAndWebsite() {
        Club club = new Club("Club Name", "www.clubwebsite.com");
        assertEquals("Club Name", club.getName());
        assertEquals("www.clubwebsite.com", club.getWebsite());
    }

    // Retrieving the id of a Club object after it has been persisted
    @Test
    public void test_retrieveIdAfterPersist() {
        EntityManager entityManager = mock(EntityManager.class);
        Club club = new Club("Club Name", "www.clubwebsite.com");
        when(entityManager.persist(club)).thenReturn(club);
        entityManager.persist(club);
        assertNotNull(club.getId());
    }

    // Creating a Club object with a null name should throw an exception
    @Test
    public void test_createClubWithNullName() {
        assertThrows(IllegalArgumentException.class, () -> {
            new Club(null, "www.clubwebsite.com");
        });
    }

    // Creating a Club object with a null website should not throw an exception
    @Test
    public void test_createClubWithNullWebsite() {
        assertDoesNotThrow(() -> {
            new Club("Club Name", null);
        });
    }

    // Creating a Club object with a name longer than 255 characters should throw an exception
    @Test
    public void test_createClubWithLongName() {
        String longName = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, urna nec aliquam ultricies, nunc nisl tincidunt nunc, id lacinia nisl mauris id ligula.";
        assertThrows(IllegalArgumentException.class, () -> {
            new Club(longName, "www.clubwebsite.com");
        });
    }

}